#############
# PROBLEM 3 #
#############

Multithreading

number_threads = 4:

1074.656613 Million Complex FMAs in 1.39693593979 seconds, 769.295557792 million Complex FMAs / second

number_threads = 2:

1074.656613 Million Complex FMAs in 2.60160899162 seconds, 413.073838713 million Complex FMAs / second

number_threads = 1:

1074.656613 Million Complex FMAs in 5.37602305412 seconds, 199.898066318 million Complex FMAs / second


As we can see in the results, by using multithreading the performance has a significant improvement. The speed for 4 threads is about 4 times the speed for 1 thread.

---------------------------------------------------------------------------------------------------------------------------------------------------------
Instruction-level Parallelism

number_threads = 4:

1074.94829 Million Complex FMAs in 0.327381134033 seconds, 3283.4765912 million Complex FMAs / second

number_threads = 2:

1074.94829 Million Complex FMAs in 0.422983169556 seconds, 2541.35002849 million Complex FMAs / second

number_threads = 1:

1074.94829 Million Complex FMAs in 0.711156129837 seconds, 1511.55034021 million Complex FMAs / second


As we can see in the results, by using instruction-level parallelism the performance is even better than by using only multithreading. The speed for 4 threads is about 2 times the speed for 1 thread. It is also more than 4 times bigger than the speed for only using multithreading (with 4 threads).