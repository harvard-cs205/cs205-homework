Hi Job 0
Hi Job 1
Hi Job 2
Hi Job 3
Bye Job 0
Hi Job 4
Bye Job 2
Bye Job 1Hi Job 5

Hi Job 6
Bye Job 3
Hi Job 7
Bye Job 4
Hi Job 8
Bye Job 5
Hi Job 9
Bye Job 6
Bye Job 7
Bye Job 8
Bye Job 9
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

[Answers]:
1, Because it is using multiprocessors ans the command could be run in parallel. However, the IO ports could only be accessed in serial, so that is the reason why we saw those random things.

2, As the sleep time increases, the ratio converges to 4, meaning that the parallel computing is becoming faster and faster, comparing with the serial computing strategy. It is possible for a parallel program to run slower than serial program. If the sleep time is infinitesimal, it is much slower comparing to serial computing strategy. For some time steps such as 10e-4 second, the behavior of the paralle program became unstable. I ran the entire program for approximately 10 times, and some times the ratio at t=0.0001 is less one, and sometimes it is a very large number. I guess this problem is related to IO ports or other internal issues. However, as the sleep time increases, the ratio converges to the cpu ration, in this case, which is 4.
