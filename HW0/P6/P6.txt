The jobs do not always finish in the order in which they start. This is presumably because ‘time.sleep(0.25)’ does not always delay the process for exactly 0.25 seconds, and this presumably occurs for mysterious internal computer scheduling reasons. This could presumably occur anytime we run a program in parallel that requires more than a tiny amount of time.

This could cause a problem if two processes are both interacting with one file. Perhaps process 1 writes the first half of the file, and process 2 writes the second half of the file. If process 2 finished ahead of process 1, the resulting file would be out of order.