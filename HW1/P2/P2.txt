Without load balancing, the plane is divided up into 1x1 pixel squares, each running in parallel. The way the mandelbrot function works, it divides the squares evenly across the processors, regardless of how long the function takes. So when we observe the histogram, it seems very drastically skewed right, since pixels with value zero take almost no time, while the ones with values close to 512 require a lot of time, so there there is a lot of time wasted. In part B, load balancing was applied randomly. This way, there was a greater chance through inherent stochasticity that the load would be balanced among the processes. We notice that the histogram is roughly normal, demonstrating that the load balancing did in fact succeed. 