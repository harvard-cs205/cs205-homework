# Your discussion here
The mandelbrot function can terminate in 0 to 512 iterations with the maximum iterations usually distributed to the centre of the graph. When the function was run, it was seen that the bulk of the work was done by the partitions towards the centre since the Default partitioning just split the graph into blocks. And thats clearly evident in the histogram which is highly skewed.

A good partitioning strategy would have the same load on the partitioning. After exploring functions for splitting the data on the basis of the distance of the points from the centre it was evident that it wasnâ€™t optimal since the graph was not symmetric. But randomizing the assignments helped even though the shuffle cost was high. The load was almost equally distributed after random assignment of points to the partitions.A function which uses the mandelbrot function to decide the partition would be the most optimal way of dealing with the problem but because of the complexity, random would be my choice of implementation.
